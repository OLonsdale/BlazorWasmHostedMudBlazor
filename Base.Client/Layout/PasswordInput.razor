<MudTextField Value="@Value"
              T="string"
              ValueChanged="OnValueChanged"
              Label="@Label"
              Adornment="Adornment.End"
              OnAdornmentClick="TogglePasswordVisibility"
              Immediate="true"
              InputType="@(_showPassword ? InputType.Text : InputType.Password)"
              AdornmentIcon="@(ShowPasswordIcon)"
              Variant="Variant"
              InputAttributes="InputAttributes" />

@code {
    [Parameter]
    public string Value { get; set; } = "";

    [Parameter]
    public EventCallback<string> ValueChanged { get; set; }

    [Parameter]
    public string Label { get; set; } = "Password";

    [Parameter]
    public Variant Variant { get; set; } = Variant.Text;

    [Parameter]
    public Dictionary<string, object> InputAttributes { get; set; } = new();

    private bool _showPassword;

    private string ShowPasswordIcon => _showPassword
        ? Icons.Material.Filled.Visibility
        : Icons.Material.Filled.VisibilityOff;

    private async Task OnValueChanged(string newValue)
    {

        Value = newValue;
        
        if (ValueChanged.HasDelegate)
        {
            await ValueChanged.InvokeAsync(newValue);
        }
    }

    private void TogglePasswordVisibility()
    {
        _showPassword = !_showPassword;
    }
}